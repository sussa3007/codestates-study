Q2. 클래스와 객체에 대해 설명해주세요.
자바에서의 객체는 클래스라는 설계도를 바탕으로 만들어 집니다. 클래스는 객체를 만들기 위한 확장 가능한 코드 템플릿이며, 
클래스에는 객체를 생성하기 위한 필드와 메소드가 있습니다.
클래스로 부터 객체를 생성하는 과정을 인스턴스화라고 하며, 해당 클래스를 이용하여 클래스 타입의 레퍼런스를 
선언하고 메모리에 객체가 할당되어 사용될때 그 객체를 인스턴스라고 합니다.

Q4. 메서드 오버라이딩과 메서드 오버로딩의 차이는 무엇인가요?
메소드 오버라이딩은 개괄적으로 덮어쓰다라는 의미를 가지고 있고, 오버라이딩의 만족하기 위한 조건으로는 상속 관계에 있어야 하며,
선언부는 같고 구현부만 변경가능하고 접근제어자와 예외 선언은 상위 클래스의 범위보다 같거나 작아야합니다.
상위 클래스의 추상화 된 메소드를 구체화 하기위한 목적으로 주로 사용 됩니다.
메소드 오버로딩의 개괄적인 의미로는, 하나의 클래스 안에서 같은 이름의 메소드를 여러개 정의하는 것 입니다.
같은 말로, 하나의 메소드 네임으로 여러 기능을 하는 메소드를 구현하기 위한 클래스 내의 메소드 구현 방식이며, 오버로딩의 조건으로는,
매개변수의 개수 또는 타입이 달라야하며, 동일한 로직으로 반환값이 같다 하더라도 메소드 오버로딩은 구현될수 있습니다.

Q12. List, Set, Map의 차이에 대해서 설명해주세요.
세가지 모두다 컬랙션 프레임웍의 핵심 인터페이스입니다.
각자의 차이점으로, 
List는 저장되는 데이터의 순서가 존재하며 값의 중복을 허용하는 데이터 타입의 인터페이스 입니다.
Set은 저장되는 데이터의 순서를 유지하지 않으며, 값의 중복을 허용하지 않는 데이터 타입의 인터페이스 입니다.
Map은 키와 값의 페어로 이루어진 데이터 집합이며, 순서를 유지하지 않고, 키는 중복을 허용하지 않습니다. 하지만,
키에 대응하는 값은 중복을 허용하는 데이터 타입의 인터페이스 입니다.